/*
 * Copyright (C) 2012 Google Inc. All rights reserved.
 * Copyright (C) 2015 Apple Inc. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1.  Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 * 2.  Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimer in the
 *     documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS "AS IS" AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

[
    NoInterfaceObject,
    JSGenerateToJSObject
] interface InternalSettings : InternalSettingsGenerated {
    [RaisesException] void setTouchEventEmulationEnabled(boolean enabled);

    // Fonts, text
    [RaisesException] void setStandardFontFamily(DOMString family, DOMString script);
    [RaisesException] void setSerifFontFamily(DOMString family, DOMString script);
    [RaisesException] void setSansSerifFontFamily(DOMString family, DOMString script);
    [RaisesException] void setFixedFontFamily(DOMString family, DOMString script);
    [RaisesException] void setCursiveFontFamily(DOMString family, DOMString script);
    [RaisesException] void setFantasyFontFamily(DOMString family, DOMString script);
    [RaisesException] void setPictographFontFamily(DOMString family, DOMString script);
    [RaisesException] void setFontFallbackPrefersPictographs(boolean preferPictographs);

    [RaisesException] void setTextAutosizingEnabled(boolean enabled);
    [RaisesException] void setTextAutosizingWindowSizeOverride(long width, long height);
    [RaisesException] void setTextAutosizingFontScaleFactor(unrestricted float fontScaleFactor);

    // Features
    [RaisesException] void setCSSShapesEnabled(boolean enabled);

    // Media
    [RaisesException] void setCanStartMedia(boolean enabled);
    [Conditional=VIDEO_TRACK, RaisesException] void setShouldDisplayTrackKind(DOMString kind, boolean enabled);
    [Conditional=VIDEO_TRACK, RaisesException] boolean shouldDisplayTrackKind(DOMString trackKind);
    [RaisesException] void setDefaultVideoPosterURL(DOMString poster);
    [RaisesException] void setTimeWithoutMouseMovementBeforeHidingControls(unrestricted double time);
    [RaisesException] void setMediaTypeOverride(DOMString mediaTypeOverride);
    void setWirelessPlaybackDisabled(boolean available);

    [RaisesException] void setForcePendingWebGLPolicy(boolean forced);

    [RaisesException] void setQuickTimePluginReplacementEnabled(boolean enabled);
    [RaisesException] void setYouTubeFlashPluginReplacementEnabled(boolean enabled);

    // Editing, forms
    [RaisesException] void setEditingBehavior(DOMString behavior);
    [RaisesException] void setShouldConvertPositionStyleOnCopy(boolean convert);
    void setLangAttributeAwareFormControlUIEnabled(boolean enabled);

    // Other switches
    [RaisesException] void setStorageBlockingPolicy(DOMString policy);
    [RaisesException] void setImagesEnabled(boolean enabled);
    [RaisesException] void setUseLegacyBackgroundSizeShorthandBehavior(boolean enabled);
    [RaisesException] void setAutoscrollForDragAndDropEnabled(boolean enabled);
    [RaisesException] void setBackgroundShouldExtendBeyondPage(boolean hasExtendedBackground);
    [RaisesException] void setScrollingTreeIncludesFrames(boolean enabled);

    [RaisesException] void setMinimumTimerInterval(unrestricted double intervalInSeconds);
};

