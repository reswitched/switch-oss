/*
 * Copyright (C) 2015 Apple Inc. All Rights Reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

// https://html.spec.whatwg.org/multipage/webappapis.html#globaleventhandlers
[
    NoInterfaceObject,
] interface GlobalEventHandlers {
    // Commented out event handlers are defined by the HTML5 specification but
    // are not yet implemented.

    [NotEnumerable] attribute EventHandler onabort;
    [NotEnumerable, Conditional=REQUEST_AUTOCOMPLETE] attribute EventHandler onautocomplete;
    [NotEnumerable, Conditional=REQUEST_AUTOCOMPLETE] attribute EventHandler onautocompleteerror;
    [NotEnumerable] attribute EventHandler onblur;
    // [NotEnumerable] attribute EventHandler oncancel;
    [NotEnumerable] attribute EventHandler oncanplay;
    [NotEnumerable] attribute EventHandler oncanplaythrough;
    [NotEnumerable] attribute EventHandler onchange;
    [NotEnumerable] attribute EventHandler onclick;
    // [NotEnumerable] attribute EventHandler onclose;
    [NotEnumerable] attribute EventHandler oncontextmenu;
    // [NotEnumerable] attribute EventHandler oncuechange;
    [NotEnumerable] attribute EventHandler ondblclick;
    [NotEnumerable] attribute EventHandler ondrag;
    [NotEnumerable] attribute EventHandler ondragend;
    [NotEnumerable] attribute EventHandler ondragenter;
    // [NotEnumerable] attribute EventHandler ondragexit;
    [NotEnumerable] attribute EventHandler ondragleave;
    [NotEnumerable] attribute EventHandler ondragover;
    [NotEnumerable] attribute EventHandler ondragstart;
    [NotEnumerable] attribute EventHandler ondrop;
    [NotEnumerable] attribute EventHandler ondurationchange;
    [NotEnumerable] attribute EventHandler onemptied;
    [NotEnumerable] attribute EventHandler onended;
    [NotEnumerable] attribute EventHandler onerror;
    [NotEnumerable] attribute EventHandler onfocus;
    [NotEnumerable] attribute EventHandler oninput;
    [NotEnumerable] attribute EventHandler oninvalid;
    [NotEnumerable] attribute EventHandler onkeydown;
    [NotEnumerable] attribute EventHandler onkeypress;
    [NotEnumerable] attribute EventHandler onkeyup;
    [NotEnumerable] attribute EventHandler onload;
    [NotEnumerable] attribute EventHandler onloadeddata;
    [NotEnumerable] attribute EventHandler onloadedmetadata;
    [NotEnumerable] attribute EventHandler onloadstart;
    [NotEnumerable] attribute EventHandler onmousedown;
    [NotEnumerable] attribute EventHandler onmouseenter;
    [NotEnumerable] attribute EventHandler onmouseleave;
    [NotEnumerable] attribute EventHandler onmousemove;
    [NotEnumerable] attribute EventHandler onmouseout;
    [NotEnumerable] attribute EventHandler onmouseover;
    [NotEnumerable] attribute EventHandler onmouseup;
    [NotEnumerable] attribute EventHandler onmousewheel;
    [NotEnumerable] attribute EventHandler onpause;
    [NotEnumerable] attribute EventHandler onplay;
    [NotEnumerable] attribute EventHandler onplaying;
    [NotEnumerable] attribute EventHandler onprogress;
    [NotEnumerable] attribute EventHandler onratechange;
    [NotEnumerable] attribute EventHandler onreset;
    // [NotEnumerable] attribute EventHandler onresize;
    [NotEnumerable] attribute EventHandler onscroll;
    [NotEnumerable] attribute EventHandler onseeked;
    [NotEnumerable] attribute EventHandler onseeking;
    [NotEnumerable] attribute EventHandler onselect;
    // [NotEnumerable] attribute EventHandler onshow;
    // [NotEnumerable] attribute EventHandler onsort;
    [NotEnumerable] attribute EventHandler onstalled;
    [NotEnumerable] attribute EventHandler onsubmit;
    [NotEnumerable] attribute EventHandler onsuspend;
    [NotEnumerable] attribute EventHandler ontimeupdate;
    // [NotEnumerable] attribute EventHandler ontoggle;
    [NotEnumerable] attribute EventHandler onvolumechange;
    [NotEnumerable] attribute EventHandler onwaiting;


    // Additions that are not yet part of the standard.

    [NotEnumerable] attribute EventHandler onsearch;
    [NotEnumerable] attribute EventHandler onwheel;
    [NotEnumerable, Conditional=TOUCH_EVENTS] attribute EventHandler ontouchcancel;
    [NotEnumerable, Conditional=TOUCH_EVENTS] attribute EventHandler ontouchend;
    [NotEnumerable, Conditional=TOUCH_EVENTS] attribute EventHandler ontouchmove;
    [NotEnumerable, Conditional=TOUCH_EVENTS] attribute EventHandler ontouchstart;
    [NotEnumerable, Conditional=MOUSE_FORCE_EVENTS] attribute EventHandler onwebkitmouseforcechanged;
    [NotEnumerable, Conditional=MOUSE_FORCE_EVENTS] attribute EventHandler onwebkitmouseforcedown;
    [NotEnumerable, Conditional=MOUSE_FORCE_EVENTS] attribute EventHandler onwebkitmouseforcewillbegin;
    [NotEnumerable, Conditional=MOUSE_FORCE_EVENTS] attribute EventHandler onwebkitmouseforceup;
    [NotEnumerable, Conditional=WILL_REVEAL_EDGE_EVENTS] attribute EventHandler onwebkitwillrevealbottom;
    [NotEnumerable, Conditional=WILL_REVEAL_EDGE_EVENTS] attribute EventHandler onwebkitwillrevealleft;
    [NotEnumerable, Conditional=WILL_REVEAL_EDGE_EVENTS] attribute EventHandler onwebkitwillrevealright;
    [NotEnumerable, Conditional=WILL_REVEAL_EDGE_EVENTS] attribute EventHandler onwebkitwillrevealtop;
};
